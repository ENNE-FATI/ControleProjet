/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import beans.AffectationProjet;
import beans.Enseignant;
import beans.ProjetRecherche;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import services.AffectationProjetService;
import services.EnseignantService;
import services.ProjetRechercheService;
import static sun.font.FontManagerNativeLibrary.load;

/**
 *
 * @author FATI
 */
public class AffectationProjetForm extends javax.swing.JInternalFrame {

    private EnseignantService es;
    private AffectationProjetService aps;
    private ProjetRechercheService prs;
    private DefaultTableModel model;
    private static int id;
    private static AffectationProjetForm instance;

    /**
     * /**
     * Creates new form AffectationProjetForm
     */
    private AffectationProjetForm() {
        super("Affectation des projets à des enseignants", true, true, true, true);
        setSize(900, 800);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        initComponents();
        this.setTitle("Gestion des projets de recherche");
        es = new EnseignantService();
        prs = new ProjetRechercheService();
        aps = new AffectationProjetService();
        loadProjetRecherche();
        loadEnseignant();
        model = (DefaultTableModel) ListProjetByEnseignant.getModel();
        load();

    }

    public void load() {
        model.setRowCount(0);
        for (AffectationProjet ap : aps.findAll()) {
            model.addRow(new Object[]{
                ap.getEnseignant().getNom() + " " + ap.getEnseignant().getPrenom(),
                ap.getProjet().getTitre()});
        }
    }

    private void loadEnseignant() {
        listEnseignants.removeAllItems();
        for (Enseignant enseignant : es.findAll()) {
            listEnseignants.addItem(enseignant);
        }
    }

    private void loadProjetRecherche() {
        listProjets.removeAllItems();
        for (ProjetRecherche projet : prs.findAll()) {
            listProjets.addItem(projet);
        }
    }

    public static AffectationProjetForm getInstance() {
        if (instance == null || instance.isClosed()) {
            synchronized (AffectationProjetForm.class) { // Synchronisez pour la sécurité des threads
                if (instance == null || instance.isClosed()) {
                    instance = new AffectationProjetForm();
                }
            }
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        listProjets = new javax.swing.JComboBox();
        listEnseignants = new javax.swing.JComboBox();
        bnAdd = new javax.swing.JButton();
        bnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListProjetByEnseignant = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(253, 253, 228));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\go\\Documents\\NetBeansProjects\\ProjetsDeRecherche\\src\\Images\\icons8-prof-48.png")); // NOI18N
        jLabel1.setText("Enseignant:");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\go\\Documents\\NetBeansProjects\\ProjetsDeRecherche\\src\\Images\\icons8-paramètres-utilisateurs-32.png")); // NOI18N
        jLabel2.setText("   Projet:");

        listProjets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProjetsActionPerformed(evt);
            }
        });

        listEnseignants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listEnseignantsActionPerformed(evt);
            }
        });

        bnAdd.setBackground(new java.awt.Color(0, 51, 255));
        bnAdd.setIcon(new javax.swing.ImageIcon("C:\\Users\\go\\Documents\\NetBeansProjects\\ProjetsDeRecherche\\src\\Images\\icons8-ajouter-24.png")); // NOI18N
        bnAdd.setText("Ajouter");
        bnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddActionPerformed(evt);
            }
        });

        bnUpdate.setBackground(new java.awt.Color(255, 0, 0));
        bnUpdate.setIcon(new javax.swing.ImageIcon("C:\\Users\\go\\Documents\\NetBeansProjects\\ProjetsDeRecherche\\src\\Images\\icons8-supprimer-24.png")); // NOI18N
        bnUpdate.setText("Supprimer");
        bnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnUpdateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("L'affectation de projetaux enseignants:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listEnseignants, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listProjets, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(bnAdd)
                        .addGap(140, 140, 140)
                        .addComponent(bnUpdate)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(listEnseignants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(listProjets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnAdd)
                    .addComponent(bnUpdate))
                .addGap(9, 9, 9))
        );

        ListProjetByEnseignant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Projet", "Enseignant"
            }
        ));
        jScrollPane1.setViewportView(ListProjetByEnseignant);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddActionPerformed
        Enseignant enseignantSelectionne = (Enseignant) listEnseignants.getSelectedItem();
        ProjetRecherche projetSelectionne = (ProjetRecherche) listProjets.getSelectedItem();

        if (enseignantSelectionne == null || projetSelectionne == null) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un projet et un enseignant.");
            return;
        }

        if (aps.findAll().stream().anyMatch(ap -> ap.getEnseignant().equals(enseignantSelectionne) && ap.getProjet().equals(projetSelectionne))) {
            JOptionPane.showMessageDialog(this, "Cette affectation existe déjà !");
            return;
        }

        AffectationProjet affectation = new AffectationProjet(enseignantSelectionne, projetSelectionne);

        if (aps.create(affectation)) {
            JOptionPane.showMessageDialog(this, "Affectation ajoutée avec succès !");
            model.addRow(new Object[]{
                enseignantSelectionne.getNom() + " " + enseignantSelectionne.getPrenom(),
                projetSelectionne.getTitre()
            });
        } else {
            JOptionPane.showMessageDialog(this, "Erreur lors de l'ajout de l'affectation.");
        }
    }//GEN-LAST:event_bnAddActionPerformed

    private void listProjetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProjetsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listProjetsActionPerformed

    private void listEnseignantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listEnseignantsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listEnseignantsActionPerformed

    private void bnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = ListProjetByEnseignant.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une affectation à supprimer.");
            return;
        }

        String enseignantNom = (String) ListProjetByEnseignant.getValueAt(selectedRow, 0);
        String projetTitre = (String) ListProjetByEnseignant.getValueAt(selectedRow, 1);

        // Parcourir la liste des affectations pour trouver celle à supprimer
        AffectationProjet affectationToDelete = null;
        for (AffectationProjet ap : aps.findAll()) {
            String nomCompletEnseignant = ap.getEnseignant().getNom() + " " + ap.getEnseignant().getPrenom();
            if (nomCompletEnseignant.equals(enseignantNom) && ap.getProjet().getTitre().equals(projetTitre)) {
                affectationToDelete = ap;
                break;
            }
        }

        if (affectationToDelete == null) {
            JOptionPane.showMessageDialog(this, "Affectation introuvable !");
            return;
        }

        // Supprimer l'affectation
        if (aps.delete(affectationToDelete)) {
            JOptionPane.showMessageDialog(this, "Affectation supprimée avec succès !");
            model.removeRow(selectedRow); // Mettre à jour la table
        } else {
            JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de l'affectation.");
        }
    }//GEN-LAST:event_bnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ListProjetByEnseignant;
    private javax.swing.JButton bnAdd;
    private javax.swing.JButton bnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox listEnseignants;
    private javax.swing.JComboBox listProjets;
    // End of variables declaration//GEN-END:variables

}
